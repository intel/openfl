# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

strategy:
  matrix:
    linux_3.6:
      imageName: 'ubuntu-latest'
      python.version: '3.6'
    linux_3.7:
      imageName: 'ubuntu-latest'
      python.version: '3.7'
    mac_3.6:
      imageName: 'macos-latest'
      python.version: '3.6'
    mac_3.7:
      imageName: 'macos-latest'
      python.version: '3.7'
    windows_3.6:
      imageName: 'windows-latest'
      python.version: '3.6'
    windows_3.7:
      imageName: 'windows-latest'
      python.version: '3.7'

pool:
  vmImage: $(imageName)
  
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install .
    pip install artifacts-keyring
  displayName: 'Install dependencies'

# - script: |
#     pytest
#   displayName: 'Run tests'
  
- script: |
    python setup.py sdist bdist_wheel
  displayName: 'Artifact creation'

## uncomment this along with twine integration on devops for auto-uploads
# - task: TwineAuthenticate@1
#   displayName: 'Twine Authenticate'
#   inputs:
#     pythonUploadServiceConnection: PyPiâ€¯ 

# - script: |
#     python -m twine upload --skip-existing -r "openfl" --config-file $(PYPIRC_PATH) dist/*.whl
#     python -m twine upload --skip-existing -r "openfl" --config-file $(PYPIRC_PATH) dist/*.tar.gz
#   displayName: 'Uploading build'
